//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebApplication1.localhost1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataUsingDataContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterEmployerOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterJobSeekerOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginEmployerOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginJobSeekerOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllJobseekersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SingleJobseekerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SingleEmployerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmployerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteJobSeekerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeJobSeekerPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeEmployerPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteJobApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewToolOrEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveToolOrEquipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetToolsAndEquipmentsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::WebApplication1.Properties.Settings.Default.WebApplication1_localhost1_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataUsingDataContractCompletedEventHandler GetDataUsingDataContractCompleted;
        
        /// <remarks/>
        public event RegisterEmployerCompletedEventHandler RegisterEmployerCompleted;
        
        /// <remarks/>
        public event RegisterJobSeekerCompletedEventHandler RegisterJobSeekerCompleted;
        
        /// <remarks/>
        public event LoginEmployerCompletedEventHandler LoginEmployerCompleted;
        
        /// <remarks/>
        public event LoginJobSeekerCompletedEventHandler LoginJobSeekerCompleted;
        
        /// <remarks/>
        public event LoginAdminCompletedEventHandler LoginAdminCompleted;
        
        /// <remarks/>
        public event AllJobseekersCompletedEventHandler AllJobseekersCompleted;
        
        /// <remarks/>
        public event SingleJobseekerCompletedEventHandler SingleJobseekerCompleted;
        
        /// <remarks/>
        public event SingleEmployerCompletedEventHandler SingleEmployerCompleted;
        
        /// <remarks/>
        public event DeleteEmployerCompletedEventHandler DeleteEmployerCompleted;
        
        /// <remarks/>
        public event DeleteJobSeekerCompletedEventHandler DeleteJobSeekerCompleted;
        
        /// <remarks/>
        public event ChangeJobSeekerPasswordCompletedEventHandler ChangeJobSeekerPasswordCompleted;
        
        /// <remarks/>
        public event ChangeEmployerPasswordCompletedEventHandler ChangeEmployerPasswordCompleted;
        
        /// <remarks/>
        public event StoreSkillsCompletedEventHandler StoreSkillsCompleted;
        
        /// <remarks/>
        public event ReadSkillsCompletedEventHandler ReadSkillsCompleted;
        
        /// <remarks/>
        public event PostJobCompletedEventHandler PostJobCompleted;
        
        /// <remarks/>
        public event AllJobsCompletedEventHandler AllJobsCompleted;
        
        /// <remarks/>
        public event ApplyForJobCompletedEventHandler ApplyForJobCompleted;
        
        /// <remarks/>
        public event getApplicantsCompletedEventHandler getApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteJobCompletedEventHandler DeleteJobCompleted;
        
        /// <remarks/>
        public event DeleteJobApplicationCompletedEventHandler DeleteJobApplicationCompleted;
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        public event AddNewToolOrEquipmentCompletedEventHandler AddNewToolOrEquipmentCompleted;
        
        /// <remarks/>
        public event RemoveToolOrEquipmentCompletedEventHandler RemoveToolOrEquipmentCompleted;
        
        /// <remarks/>
        public event GetToolsAndEquipmentsCompletedEventHandler GetToolsAndEquipmentsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetDataUsingDataContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CompositeType GetDataUsingDataContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompositeType composite) {
            object[] results = this.Invoke("GetDataUsingDataContract", new object[] {
                        composite});
            return ((CompositeType)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite, object userState) {
            if ((this.GetDataUsingDataContractOperationCompleted == null)) {
                this.GetDataUsingDataContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractOperationCompleted);
            }
            this.InvokeAsync("GetDataUsingDataContract", new object[] {
                        composite}, this.GetDataUsingDataContractOperationCompleted, userState);
        }
        
        private void OnGetDataUsingDataContractOperationCompleted(object arg) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/RegisterEmployer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegisterEmployer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string FirstName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string LastName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ContactNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AlternativeContactNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ResidentialAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ProfileImage) {
            this.Invoke("RegisterEmployer", new object[] {
                        FirstName,
                        LastName,
                        EmailAddress,
                        Password,
                        ContactNumber,
                        AlternativeContactNumber,
                        ResidentialAddress,
                        ProfileImage});
        }
        
        /// <remarks/>
        public void RegisterEmployerAsync(string FirstName, string LastName, string EmailAddress, string Password, string ContactNumber, string AlternativeContactNumber, string ResidentialAddress, string ProfileImage) {
            this.RegisterEmployerAsync(FirstName, LastName, EmailAddress, Password, ContactNumber, AlternativeContactNumber, ResidentialAddress, ProfileImage, null);
        }
        
        /// <remarks/>
        public void RegisterEmployerAsync(string FirstName, string LastName, string EmailAddress, string Password, string ContactNumber, string AlternativeContactNumber, string ResidentialAddress, string ProfileImage, object userState) {
            if ((this.RegisterEmployerOperationCompleted == null)) {
                this.RegisterEmployerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterEmployerOperationCompleted);
            }
            this.InvokeAsync("RegisterEmployer", new object[] {
                        FirstName,
                        LastName,
                        EmailAddress,
                        Password,
                        ContactNumber,
                        AlternativeContactNumber,
                        ResidentialAddress,
                        ProfileImage}, this.RegisterEmployerOperationCompleted, userState);
        }
        
        private void OnRegisterEmployerOperationCompleted(object arg) {
            if ((this.RegisterEmployerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterEmployerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/RegisterJobSeeker", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegisterJobSeeker([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string FirstName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string LastName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ContactNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AlternativeContactNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ResidentialAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ProfileImage) {
            this.Invoke("RegisterJobSeeker", new object[] {
                        FirstName,
                        LastName,
                        EmailAddress,
                        Password,
                        ContactNumber,
                        AlternativeContactNumber,
                        ResidentialAddress,
                        ProfileImage});
        }
        
        /// <remarks/>
        public void RegisterJobSeekerAsync(string FirstName, string LastName, string EmailAddress, string Password, string ContactNumber, string AlternativeContactNumber, string ResidentialAddress, string ProfileImage) {
            this.RegisterJobSeekerAsync(FirstName, LastName, EmailAddress, Password, ContactNumber, AlternativeContactNumber, ResidentialAddress, ProfileImage, null);
        }
        
        /// <remarks/>
        public void RegisterJobSeekerAsync(string FirstName, string LastName, string EmailAddress, string Password, string ContactNumber, string AlternativeContactNumber, string ResidentialAddress, string ProfileImage, object userState) {
            if ((this.RegisterJobSeekerOperationCompleted == null)) {
                this.RegisterJobSeekerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterJobSeekerOperationCompleted);
            }
            this.InvokeAsync("RegisterJobSeeker", new object[] {
                        FirstName,
                        LastName,
                        EmailAddress,
                        Password,
                        ContactNumber,
                        AlternativeContactNumber,
                        ResidentialAddress,
                        ProfileImage}, this.RegisterJobSeekerOperationCompleted, userState);
        }
        
        private void OnRegisterJobSeekerOperationCompleted(object arg) {
            if ((this.RegisterJobSeekerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterJobSeekerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/LoginEmployer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoginEmployer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, out int EmployerID, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool EmployerIDSpecified, out bool CanLogin, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CanLoginSpecified) {
            object[] results = this.Invoke("LoginEmployer", new object[] {
                        EmailAddress,
                        Password});
            EmployerID = ((int)(results[0]));
            EmployerIDSpecified = ((bool)(results[1]));
            CanLogin = ((bool)(results[2]));
            CanLoginSpecified = ((bool)(results[3]));
        }
        
        /// <remarks/>
        public void LoginEmployerAsync(string EmailAddress, string Password) {
            this.LoginEmployerAsync(EmailAddress, Password, null);
        }
        
        /// <remarks/>
        public void LoginEmployerAsync(string EmailAddress, string Password, object userState) {
            if ((this.LoginEmployerOperationCompleted == null)) {
                this.LoginEmployerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginEmployerOperationCompleted);
            }
            this.InvokeAsync("LoginEmployer", new object[] {
                        EmailAddress,
                        Password}, this.LoginEmployerOperationCompleted, userState);
        }
        
        private void OnLoginEmployerOperationCompleted(object arg) {
            if ((this.LoginEmployerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginEmployerCompleted(this, new LoginEmployerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/LoginJobSeeker", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoginJobSeeker([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, out int JobSeekerID, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool JobSeekerIDSpecified, out bool CanLogin, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CanLoginSpecified) {
            object[] results = this.Invoke("LoginJobSeeker", new object[] {
                        EmailAddress,
                        Password});
            JobSeekerID = ((int)(results[0]));
            JobSeekerIDSpecified = ((bool)(results[1]));
            CanLogin = ((bool)(results[2]));
            CanLoginSpecified = ((bool)(results[3]));
        }
        
        /// <remarks/>
        public void LoginJobSeekerAsync(string EmailAddress, string Password) {
            this.LoginJobSeekerAsync(EmailAddress, Password, null);
        }
        
        /// <remarks/>
        public void LoginJobSeekerAsync(string EmailAddress, string Password, object userState) {
            if ((this.LoginJobSeekerOperationCompleted == null)) {
                this.LoginJobSeekerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginJobSeekerOperationCompleted);
            }
            this.InvokeAsync("LoginJobSeeker", new object[] {
                        EmailAddress,
                        Password}, this.LoginJobSeekerOperationCompleted, userState);
        }
        
        private void OnLoginJobSeekerOperationCompleted(object arg) {
            if ((this.LoginJobSeekerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginJobSeekerCompleted(this, new LoginJobSeekerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/LoginAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoginAdmin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, out int JobSeekerID, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool JobSeekerIDSpecified, out bool CanLogin, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CanLoginSpecified) {
            object[] results = this.Invoke("LoginAdmin", new object[] {
                        EmailAddress,
                        Password});
            JobSeekerID = ((int)(results[0]));
            JobSeekerIDSpecified = ((bool)(results[1]));
            CanLogin = ((bool)(results[2]));
            CanLoginSpecified = ((bool)(results[3]));
        }
        
        /// <remarks/>
        public void LoginAdminAsync(string EmailAddress, string Password) {
            this.LoginAdminAsync(EmailAddress, Password, null);
        }
        
        /// <remarks/>
        public void LoginAdminAsync(string EmailAddress, string Password, object userState) {
            if ((this.LoginAdminOperationCompleted == null)) {
                this.LoginAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginAdminOperationCompleted);
            }
            this.InvokeAsync("LoginAdmin", new object[] {
                        EmailAddress,
                        Password}, this.LoginAdminOperationCompleted, userState);
        }
        
        private void OnLoginAdminOperationCompleted(object arg) {
            if ((this.LoginAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginAdminCompleted(this, new LoginAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AllJobseekers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
        public JobSeeker[] AllJobseekers() {
            object[] results = this.Invoke("AllJobseekers", new object[0]);
            return ((JobSeeker[])(results[0]));
        }
        
        /// <remarks/>
        public void AllJobseekersAsync() {
            this.AllJobseekersAsync(null);
        }
        
        /// <remarks/>
        public void AllJobseekersAsync(object userState) {
            if ((this.AllJobseekersOperationCompleted == null)) {
                this.AllJobseekersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllJobseekersOperationCompleted);
            }
            this.InvokeAsync("AllJobseekers", new object[0], this.AllJobseekersOperationCompleted, userState);
        }
        
        private void OnAllJobseekersOperationCompleted(object arg) {
            if ((this.AllJobseekersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllJobseekersCompleted(this, new AllJobseekersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SingleJobseeker", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public JobSeeker SingleJobseeker(int JobSeekerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobSeekerIDSpecified) {
            object[] results = this.Invoke("SingleJobseeker", new object[] {
                        JobSeekerID,
                        JobSeekerIDSpecified});
            return ((JobSeeker)(results[0]));
        }
        
        /// <remarks/>
        public void SingleJobseekerAsync(int JobSeekerID, bool JobSeekerIDSpecified) {
            this.SingleJobseekerAsync(JobSeekerID, JobSeekerIDSpecified, null);
        }
        
        /// <remarks/>
        public void SingleJobseekerAsync(int JobSeekerID, bool JobSeekerIDSpecified, object userState) {
            if ((this.SingleJobseekerOperationCompleted == null)) {
                this.SingleJobseekerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSingleJobseekerOperationCompleted);
            }
            this.InvokeAsync("SingleJobseeker", new object[] {
                        JobSeekerID,
                        JobSeekerIDSpecified}, this.SingleJobseekerOperationCompleted, userState);
        }
        
        private void OnSingleJobseekerOperationCompleted(object arg) {
            if ((this.SingleJobseekerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SingleJobseekerCompleted(this, new SingleJobseekerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SingleEmployer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Employer SingleEmployer(int EmployerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EmployerIDSpecified) {
            object[] results = this.Invoke("SingleEmployer", new object[] {
                        EmployerID,
                        EmployerIDSpecified});
            return ((Employer)(results[0]));
        }
        
        /// <remarks/>
        public void SingleEmployerAsync(int EmployerID, bool EmployerIDSpecified) {
            this.SingleEmployerAsync(EmployerID, EmployerIDSpecified, null);
        }
        
        /// <remarks/>
        public void SingleEmployerAsync(int EmployerID, bool EmployerIDSpecified, object userState) {
            if ((this.SingleEmployerOperationCompleted == null)) {
                this.SingleEmployerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSingleEmployerOperationCompleted);
            }
            this.InvokeAsync("SingleEmployer", new object[] {
                        EmployerID,
                        EmployerIDSpecified}, this.SingleEmployerOperationCompleted, userState);
        }
        
        private void OnSingleEmployerOperationCompleted(object arg) {
            if ((this.SingleEmployerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SingleEmployerCompleted(this, new SingleEmployerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/DeleteEmployer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmployer(int EmployerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EmployerIDSpecified) {
            this.Invoke("DeleteEmployer", new object[] {
                        EmployerID,
                        EmployerIDSpecified});
        }
        
        /// <remarks/>
        public void DeleteEmployerAsync(int EmployerID, bool EmployerIDSpecified) {
            this.DeleteEmployerAsync(EmployerID, EmployerIDSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteEmployerAsync(int EmployerID, bool EmployerIDSpecified, object userState) {
            if ((this.DeleteEmployerOperationCompleted == null)) {
                this.DeleteEmployerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmployerOperationCompleted);
            }
            this.InvokeAsync("DeleteEmployer", new object[] {
                        EmployerID,
                        EmployerIDSpecified}, this.DeleteEmployerOperationCompleted, userState);
        }
        
        private void OnDeleteEmployerOperationCompleted(object arg) {
            if ((this.DeleteEmployerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmployerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/DeleteJobSeeker", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteJobSeeker(int JobSeekerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobSeekerIDSpecified) {
            this.Invoke("DeleteJobSeeker", new object[] {
                        JobSeekerID,
                        JobSeekerIDSpecified});
        }
        
        /// <remarks/>
        public void DeleteJobSeekerAsync(int JobSeekerID, bool JobSeekerIDSpecified) {
            this.DeleteJobSeekerAsync(JobSeekerID, JobSeekerIDSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteJobSeekerAsync(int JobSeekerID, bool JobSeekerIDSpecified, object userState) {
            if ((this.DeleteJobSeekerOperationCompleted == null)) {
                this.DeleteJobSeekerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteJobSeekerOperationCompleted);
            }
            this.InvokeAsync("DeleteJobSeeker", new object[] {
                        JobSeekerID,
                        JobSeekerIDSpecified}, this.DeleteJobSeekerOperationCompleted, userState);
        }
        
        private void OnDeleteJobSeekerOperationCompleted(object arg) {
            if ((this.DeleteJobSeekerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteJobSeekerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ChangeJobSeekerPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeJobSeekerPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, out bool success, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool successSpecified) {
            object[] results = this.Invoke("ChangeJobSeekerPassword", new object[] {
                        EmailAddress,
                        Password});
            success = ((bool)(results[0]));
            successSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ChangeJobSeekerPasswordAsync(string EmailAddress, string Password) {
            this.ChangeJobSeekerPasswordAsync(EmailAddress, Password, null);
        }
        
        /// <remarks/>
        public void ChangeJobSeekerPasswordAsync(string EmailAddress, string Password, object userState) {
            if ((this.ChangeJobSeekerPasswordOperationCompleted == null)) {
                this.ChangeJobSeekerPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeJobSeekerPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeJobSeekerPassword", new object[] {
                        EmailAddress,
                        Password}, this.ChangeJobSeekerPasswordOperationCompleted, userState);
        }
        
        private void OnChangeJobSeekerPasswordOperationCompleted(object arg) {
            if ((this.ChangeJobSeekerPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeJobSeekerPasswordCompleted(this, new ChangeJobSeekerPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ChangeEmployerPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeEmployerPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, out bool success, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool successSpecified) {
            object[] results = this.Invoke("ChangeEmployerPassword", new object[] {
                        EmailAddress,
                        Password});
            success = ((bool)(results[0]));
            successSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ChangeEmployerPasswordAsync(string EmailAddress, string Password) {
            this.ChangeEmployerPasswordAsync(EmailAddress, Password, null);
        }
        
        /// <remarks/>
        public void ChangeEmployerPasswordAsync(string EmailAddress, string Password, object userState) {
            if ((this.ChangeEmployerPasswordOperationCompleted == null)) {
                this.ChangeEmployerPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeEmployerPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeEmployerPassword", new object[] {
                        EmailAddress,
                        Password}, this.ChangeEmployerPasswordOperationCompleted, userState);
        }
        
        private void OnChangeEmployerPasswordOperationCompleted(object arg) {
            if ((this.ChangeEmployerPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeEmployerPasswordCompleted(this, new ChangeEmployerPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/StoreSkills", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StoreSkills([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Name, int SkillLevel, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SkillLevelSpecified, int JobSeekerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobSeekerIDSpecified) {
            this.Invoke("StoreSkills", new object[] {
                        Name,
                        SkillLevel,
                        SkillLevelSpecified,
                        JobSeekerID,
                        JobSeekerIDSpecified});
        }
        
        /// <remarks/>
        public void StoreSkillsAsync(string Name, int SkillLevel, bool SkillLevelSpecified, int JobSeekerID, bool JobSeekerIDSpecified) {
            this.StoreSkillsAsync(Name, SkillLevel, SkillLevelSpecified, JobSeekerID, JobSeekerIDSpecified, null);
        }
        
        /// <remarks/>
        public void StoreSkillsAsync(string Name, int SkillLevel, bool SkillLevelSpecified, int JobSeekerID, bool JobSeekerIDSpecified, object userState) {
            if ((this.StoreSkillsOperationCompleted == null)) {
                this.StoreSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreSkillsOperationCompleted);
            }
            this.InvokeAsync("StoreSkills", new object[] {
                        Name,
                        SkillLevel,
                        SkillLevelSpecified,
                        JobSeekerID,
                        JobSeekerIDSpecified}, this.StoreSkillsOperationCompleted, userState);
        }
        
        private void OnStoreSkillsOperationCompleted(object arg) {
            if ((this.StoreSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreSkillsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ReadSkills", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
        public InformalSkill[] ReadSkills(int JobSeekerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobSeekerIDSpecified) {
            object[] results = this.Invoke("ReadSkills", new object[] {
                        JobSeekerID,
                        JobSeekerIDSpecified});
            return ((InformalSkill[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadSkillsAsync(int JobSeekerID, bool JobSeekerIDSpecified) {
            this.ReadSkillsAsync(JobSeekerID, JobSeekerIDSpecified, null);
        }
        
        /// <remarks/>
        public void ReadSkillsAsync(int JobSeekerID, bool JobSeekerIDSpecified, object userState) {
            if ((this.ReadSkillsOperationCompleted == null)) {
                this.ReadSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadSkillsOperationCompleted);
            }
            this.InvokeAsync("ReadSkills", new object[] {
                        JobSeekerID,
                        JobSeekerIDSpecified}, this.ReadSkillsOperationCompleted, userState);
        }
        
        private void OnReadSkillsOperationCompleted(object arg) {
            if ((this.ReadSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadSkillsCompleted(this, new ReadSkillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/PostJob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostJob([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Description, int NumberOfDaysRequired, [System.Xml.Serialization.XmlIgnoreAttribute()] bool NumberOfDaysRequiredSpecified, int StartTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool StartTimeSpecified, int EndTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EndTimeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Location, double ToBePaid, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ToBePaidSpecified, int EmployerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EmployerIDSpecified) {
            this.Invoke("PostJob", new object[] {
                        Name,
                        Description,
                        NumberOfDaysRequired,
                        NumberOfDaysRequiredSpecified,
                        StartTime,
                        StartTimeSpecified,
                        EndTime,
                        EndTimeSpecified,
                        Location,
                        ToBePaid,
                        ToBePaidSpecified,
                        EmployerID,
                        EmployerIDSpecified});
        }
        
        /// <remarks/>
        public void PostJobAsync(string Name, string Description, int NumberOfDaysRequired, bool NumberOfDaysRequiredSpecified, int StartTime, bool StartTimeSpecified, int EndTime, bool EndTimeSpecified, string Location, double ToBePaid, bool ToBePaidSpecified, int EmployerID, bool EmployerIDSpecified) {
            this.PostJobAsync(Name, Description, NumberOfDaysRequired, NumberOfDaysRequiredSpecified, StartTime, StartTimeSpecified, EndTime, EndTimeSpecified, Location, ToBePaid, ToBePaidSpecified, EmployerID, EmployerIDSpecified, null);
        }
        
        /// <remarks/>
        public void PostJobAsync(string Name, string Description, int NumberOfDaysRequired, bool NumberOfDaysRequiredSpecified, int StartTime, bool StartTimeSpecified, int EndTime, bool EndTimeSpecified, string Location, double ToBePaid, bool ToBePaidSpecified, int EmployerID, bool EmployerIDSpecified, object userState) {
            if ((this.PostJobOperationCompleted == null)) {
                this.PostJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostJobOperationCompleted);
            }
            this.InvokeAsync("PostJob", new object[] {
                        Name,
                        Description,
                        NumberOfDaysRequired,
                        NumberOfDaysRequiredSpecified,
                        StartTime,
                        StartTimeSpecified,
                        EndTime,
                        EndTimeSpecified,
                        Location,
                        ToBePaid,
                        ToBePaidSpecified,
                        EmployerID,
                        EmployerIDSpecified}, this.PostJobOperationCompleted, userState);
        }
        
        private void OnPostJobOperationCompleted(object arg) {
            if ((this.PostJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AllJobs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
        public Job[] AllJobs() {
            object[] results = this.Invoke("AllJobs", new object[0]);
            return ((Job[])(results[0]));
        }
        
        /// <remarks/>
        public void AllJobsAsync() {
            this.AllJobsAsync(null);
        }
        
        /// <remarks/>
        public void AllJobsAsync(object userState) {
            if ((this.AllJobsOperationCompleted == null)) {
                this.AllJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllJobsOperationCompleted);
            }
            this.InvokeAsync("AllJobs", new object[0], this.AllJobsOperationCompleted, userState);
        }
        
        private void OnAllJobsOperationCompleted(object arg) {
            if ((this.AllJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllJobsCompleted(this, new AllJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ApplyForJob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApplyForJob(int JobID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobIDSpecified, int JobseekerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobseekerIDSpecified) {
            this.Invoke("ApplyForJob", new object[] {
                        JobID,
                        JobIDSpecified,
                        JobseekerID,
                        JobseekerIDSpecified});
        }
        
        /// <remarks/>
        public void ApplyForJobAsync(int JobID, bool JobIDSpecified, int JobseekerID, bool JobseekerIDSpecified) {
            this.ApplyForJobAsync(JobID, JobIDSpecified, JobseekerID, JobseekerIDSpecified, null);
        }
        
        /// <remarks/>
        public void ApplyForJobAsync(int JobID, bool JobIDSpecified, int JobseekerID, bool JobseekerIDSpecified, object userState) {
            if ((this.ApplyForJobOperationCompleted == null)) {
                this.ApplyForJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForJobOperationCompleted);
            }
            this.InvokeAsync("ApplyForJob", new object[] {
                        JobID,
                        JobIDSpecified,
                        JobseekerID,
                        JobseekerIDSpecified}, this.ApplyForJobOperationCompleted, userState);
        }
        
        private void OnApplyForJobOperationCompleted(object arg) {
            if ((this.ApplyForJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getApplicants", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
        public JobSeeker[] getApplicants(int EmployerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool EmployerIDSpecified) {
            object[] results = this.Invoke("getApplicants", new object[] {
                        EmployerID,
                        EmployerIDSpecified});
            return ((JobSeeker[])(results[0]));
        }
        
        /// <remarks/>
        public void getApplicantsAsync(int EmployerID, bool EmployerIDSpecified) {
            this.getApplicantsAsync(EmployerID, EmployerIDSpecified, null);
        }
        
        /// <remarks/>
        public void getApplicantsAsync(int EmployerID, bool EmployerIDSpecified, object userState) {
            if ((this.getApplicantsOperationCompleted == null)) {
                this.getApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplicantsOperationCompleted);
            }
            this.InvokeAsync("getApplicants", new object[] {
                        EmployerID,
                        EmployerIDSpecified}, this.getApplicantsOperationCompleted, userState);
        }
        
        private void OngetApplicantsOperationCompleted(object arg) {
            if ((this.getApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplicantsCompleted(this, new getApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/DeleteJob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteJob(int JobID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobIDSpecified) {
            this.Invoke("DeleteJob", new object[] {
                        JobID,
                        JobIDSpecified});
        }
        
        /// <remarks/>
        public void DeleteJobAsync(int JobID, bool JobIDSpecified) {
            this.DeleteJobAsync(JobID, JobIDSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteJobAsync(int JobID, bool JobIDSpecified, object userState) {
            if ((this.DeleteJobOperationCompleted == null)) {
                this.DeleteJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteJobOperationCompleted);
            }
            this.InvokeAsync("DeleteJob", new object[] {
                        JobID,
                        JobIDSpecified}, this.DeleteJobOperationCompleted, userState);
        }
        
        private void OnDeleteJobOperationCompleted(object arg) {
            if ((this.DeleteJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/DeleteJobApplication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteJobApplication(int JobApplicationID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobApplicationIDSpecified) {
            this.Invoke("DeleteJobApplication", new object[] {
                        JobApplicationID,
                        JobApplicationIDSpecified});
        }
        
        /// <remarks/>
        public void DeleteJobApplicationAsync(int JobApplicationID, bool JobApplicationIDSpecified) {
            this.DeleteJobApplicationAsync(JobApplicationID, JobApplicationIDSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteJobApplicationAsync(int JobApplicationID, bool JobApplicationIDSpecified, object userState) {
            if ((this.DeleteJobApplicationOperationCompleted == null)) {
                this.DeleteJobApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteJobApplicationOperationCompleted);
            }
            this.InvokeAsync("DeleteJobApplication", new object[] {
                        JobApplicationID,
                        JobApplicationIDSpecified}, this.DeleteJobApplicationOperationCompleted, userState);
        }
        
        private void OnDeleteJobApplicationOperationCompleted(object arg) {
            if ((this.DeleteJobApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteJobApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string test() {
            object[] results = this.Invoke("test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testAsync() {
            this.testAsync(null);
        }
        
        /// <remarks/>
        public void testAsync(object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[0], this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AddNewToolOrEquipment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddNewToolOrEquipment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Image, int JobSeekerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobSeekerIDSpecified) {
            this.Invoke("AddNewToolOrEquipment", new object[] {
                        Name,
                        Image,
                        JobSeekerID,
                        JobSeekerIDSpecified});
        }
        
        /// <remarks/>
        public void AddNewToolOrEquipmentAsync(string Name, string Image, int JobSeekerID, bool JobSeekerIDSpecified) {
            this.AddNewToolOrEquipmentAsync(Name, Image, JobSeekerID, JobSeekerIDSpecified, null);
        }
        
        /// <remarks/>
        public void AddNewToolOrEquipmentAsync(string Name, string Image, int JobSeekerID, bool JobSeekerIDSpecified, object userState) {
            if ((this.AddNewToolOrEquipmentOperationCompleted == null)) {
                this.AddNewToolOrEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewToolOrEquipmentOperationCompleted);
            }
            this.InvokeAsync("AddNewToolOrEquipment", new object[] {
                        Name,
                        Image,
                        JobSeekerID,
                        JobSeekerIDSpecified}, this.AddNewToolOrEquipmentOperationCompleted, userState);
        }
        
        private void OnAddNewToolOrEquipmentOperationCompleted(object arg) {
            if ((this.AddNewToolOrEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewToolOrEquipmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/RemoveToolOrEquipment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveToolOrEquipment(int tool_equipementID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool tool_equipementIDSpecified) {
            this.Invoke("RemoveToolOrEquipment", new object[] {
                        tool_equipementID,
                        tool_equipementIDSpecified});
        }
        
        /// <remarks/>
        public void RemoveToolOrEquipmentAsync(int tool_equipementID, bool tool_equipementIDSpecified) {
            this.RemoveToolOrEquipmentAsync(tool_equipementID, tool_equipementIDSpecified, null);
        }
        
        /// <remarks/>
        public void RemoveToolOrEquipmentAsync(int tool_equipementID, bool tool_equipementIDSpecified, object userState) {
            if ((this.RemoveToolOrEquipmentOperationCompleted == null)) {
                this.RemoveToolOrEquipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveToolOrEquipmentOperationCompleted);
            }
            this.InvokeAsync("RemoveToolOrEquipment", new object[] {
                        tool_equipementID,
                        tool_equipementIDSpecified}, this.RemoveToolOrEquipmentOperationCompleted, userState);
        }
        
        private void OnRemoveToolOrEquipmentOperationCompleted(object arg) {
            if ((this.RemoveToolOrEquipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveToolOrEquipmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetToolsAndEquipments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
        public Tool_Equipment[] GetToolsAndEquipments(int JobSeekerID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool JobSeekerIDSpecified) {
            object[] results = this.Invoke("GetToolsAndEquipments", new object[] {
                        JobSeekerID,
                        JobSeekerIDSpecified});
            return ((Tool_Equipment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetToolsAndEquipmentsAsync(int JobSeekerID, bool JobSeekerIDSpecified) {
            this.GetToolsAndEquipmentsAsync(JobSeekerID, JobSeekerIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetToolsAndEquipmentsAsync(int JobSeekerID, bool JobSeekerIDSpecified, object userState) {
            if ((this.GetToolsAndEquipmentsOperationCompleted == null)) {
                this.GetToolsAndEquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetToolsAndEquipmentsOperationCompleted);
            }
            this.InvokeAsync("GetToolsAndEquipments", new object[] {
                        JobSeekerID,
                        JobSeekerIDSpecified}, this.GetToolsAndEquipmentsOperationCompleted, userState);
        }
        
        private void OnGetToolsAndEquipmentsOperationCompleted(object arg) {
            if ((this.GetToolsAndEquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetToolsAndEquipmentsCompleted(this, new GetToolsAndEquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
    public partial class CompositeType {
        
        private bool boolValueField;
        
        private bool boolValueFieldSpecified;
        
        private string stringValueField;
        
        /// <remarks/>
        public bool BoolValue {
            get {
                return this.boolValueField;
            }
            set {
                this.boolValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoolValueSpecified {
            get {
                return this.boolValueFieldSpecified;
            }
            set {
                this.boolValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
    public partial class Tool_Equipment {
        
        private string imageField;
        
        private System.Nullable<int> jobSeekerIDField;
        
        private bool jobSeekerIDFieldSpecified;
        
        private string nameField;
        
        private int tool_EquipmentIDField;
        
        private bool tool_EquipmentIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> JobSeekerID {
            get {
                return this.jobSeekerIDField;
            }
            set {
                this.jobSeekerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JobSeekerIDSpecified {
            get {
                return this.jobSeekerIDFieldSpecified;
            }
            set {
                this.jobSeekerIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Tool_EquipmentID {
            get {
                return this.tool_EquipmentIDField;
            }
            set {
                this.tool_EquipmentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Tool_EquipmentIDSpecified {
            get {
                return this.tool_EquipmentIDFieldSpecified;
            }
            set {
                this.tool_EquipmentIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
    public partial class Employer {
        
        private string alternativeContactNumberField;
        
        private string contactNumberField;
        
        private string emailAddressField;
        
        private int employerIDField;
        
        private bool employerIDFieldSpecified;
        
        private string firstNameField;
        
        private Job[] jobsField;
        
        private string lastNameField;
        
        private string passwordField;
        
        private string profileImage_StringField;
        
        private string residentialAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AlternativeContactNumber {
            get {
                return this.alternativeContactNumberField;
            }
            set {
                this.alternativeContactNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactNumber {
            get {
                return this.contactNumberField;
            }
            set {
                this.contactNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int EmployerID {
            get {
                return this.employerIDField;
            }
            set {
                this.employerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployerIDSpecified {
            get {
                return this.employerIDFieldSpecified;
            }
            set {
                this.employerIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Job[] Jobs {
            get {
                return this.jobsField;
            }
            set {
                this.jobsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProfileImage_String {
            get {
                return this.profileImage_StringField;
            }
            set {
                this.profileImage_StringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResidentialAddress {
            get {
                return this.residentialAddressField;
            }
            set {
                this.residentialAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
    public partial class Job {
        
        private string descriptionField;
        
        private Employer employerField;
        
        private System.Nullable<int> employerIDField;
        
        private bool employerIDFieldSpecified;
        
        private System.Nullable<int> endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private JobApplication[] jobApplicationsField;
        
        private int jobIDField;
        
        private bool jobIDFieldSpecified;
        
        private string locationField;
        
        private string nameField;
        
        private System.Nullable<int> numberOfDaysField;
        
        private bool numberOfDaysFieldSpecified;
        
        private System.Nullable<int> startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.Nullable<double> toBePaidField;
        
        private bool toBePaidFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Employer Employer {
            get {
                return this.employerField;
            }
            set {
                this.employerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EmployerID {
            get {
                return this.employerIDField;
            }
            set {
                this.employerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmployerIDSpecified {
            get {
                return this.employerIDFieldSpecified;
            }
            set {
                this.employerIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public JobApplication[] JobApplications {
            get {
                return this.jobApplicationsField;
            }
            set {
                this.jobApplicationsField = value;
            }
        }
        
        /// <remarks/>
        public int JobID {
            get {
                return this.jobIDField;
            }
            set {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JobIDSpecified {
            get {
                return this.jobIDFieldSpecified;
            }
            set {
                this.jobIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NumberOfDays {
            get {
                return this.numberOfDaysField;
            }
            set {
                this.numberOfDaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfDaysSpecified {
            get {
                return this.numberOfDaysFieldSpecified;
            }
            set {
                this.numberOfDaysFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> ToBePaid {
            get {
                return this.toBePaidField;
            }
            set {
                this.toBePaidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToBePaidSpecified {
            get {
                return this.toBePaidFieldSpecified;
            }
            set {
                this.toBePaidFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
    public partial class JobApplication {
        
        private int applicationIDField;
        
        private bool applicationIDFieldSpecified;
        
        private Job jobField;
        
        private System.Nullable<int> jobIDField;
        
        private bool jobIDFieldSpecified;
        
        private JobSeeker jobSeekerField;
        
        private System.Nullable<int> jobSeekerIDField;
        
        private bool jobSeekerIDFieldSpecified;
        
        /// <remarks/>
        public int ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicationIDSpecified {
            get {
                return this.applicationIDFieldSpecified;
            }
            set {
                this.applicationIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Job Job {
            get {
                return this.jobField;
            }
            set {
                this.jobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> JobID {
            get {
                return this.jobIDField;
            }
            set {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JobIDSpecified {
            get {
                return this.jobIDFieldSpecified;
            }
            set {
                this.jobIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public JobSeeker JobSeeker {
            get {
                return this.jobSeekerField;
            }
            set {
                this.jobSeekerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> JobSeekerID {
            get {
                return this.jobSeekerIDField;
            }
            set {
                this.jobSeekerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JobSeekerIDSpecified {
            get {
                return this.jobSeekerIDFieldSpecified;
            }
            set {
                this.jobSeekerIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
    public partial class JobSeeker {
        
        private string alternativeContactNumberField;
        
        private string contactNumberField;
        
        private string emailAddressField;
        
        private string firstNameField;
        
        private InformalSkill[] informalSkillsField;
        
        private System.Nullable<int> isAvailableField;
        
        private bool isAvailableFieldSpecified;
        
        private JobApplication[] jobApplicationsField;
        
        private int jobSeekerIDField;
        
        private bool jobSeekerIDFieldSpecified;
        
        private string lastNameField;
        
        private string passwordField;
        
        private string profileImage_StringField;
        
        private string residentialAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AlternativeContactNumber {
            get {
                return this.alternativeContactNumberField;
            }
            set {
                this.alternativeContactNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactNumber {
            get {
                return this.contactNumberField;
            }
            set {
                this.contactNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public InformalSkill[] InformalSkills {
            get {
                return this.informalSkillsField;
            }
            set {
                this.informalSkillsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IsAvailable {
            get {
                return this.isAvailableField;
            }
            set {
                this.isAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAvailableSpecified {
            get {
                return this.isAvailableFieldSpecified;
            }
            set {
                this.isAvailableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public JobApplication[] JobApplications {
            get {
                return this.jobApplicationsField;
            }
            set {
                this.jobApplicationsField = value;
            }
        }
        
        /// <remarks/>
        public int JobSeekerID {
            get {
                return this.jobSeekerIDField;
            }
            set {
                this.jobSeekerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JobSeekerIDSpecified {
            get {
                return this.jobSeekerIDFieldSpecified;
            }
            set {
                this.jobSeekerIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProfileImage_String {
            get {
                return this.profileImage_StringField;
            }
            set {
                this.profileImage_StringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResidentialAddress {
            get {
                return this.residentialAddressField;
            }
            set {
                this.residentialAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/TempJobsWcf")]
    public partial class InformalSkill {
        
        private JobSeeker jobSeekerField;
        
        private System.Nullable<int> jobSeekerIDField;
        
        private bool jobSeekerIDFieldSpecified;
        
        private string nameField;
        
        private System.Nullable<int> skillLevelField;
        
        private bool skillLevelFieldSpecified;
        
        private int skill_IDField;
        
        private bool skill_IDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public JobSeeker JobSeeker {
            get {
                return this.jobSeekerField;
            }
            set {
                this.jobSeekerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> JobSeekerID {
            get {
                return this.jobSeekerIDField;
            }
            set {
                this.jobSeekerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool JobSeekerIDSpecified {
            get {
                return this.jobSeekerIDFieldSpecified;
            }
            set {
                this.jobSeekerIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SkillLevel {
            get {
                return this.skillLevelField;
            }
            set {
                this.skillLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SkillLevelSpecified {
            get {
                return this.skillLevelFieldSpecified;
            }
            set {
                this.skillLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Skill_ID {
            get {
                return this.skill_IDField;
            }
            set {
                this.skill_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Skill_IDSpecified {
            get {
                return this.skill_IDFieldSpecified;
            }
            set {
                this.skill_IDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDataUsingDataContractCompletedEventHandler(object sender, GetDataUsingDataContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompositeType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompositeType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RegisterEmployerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RegisterJobSeekerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginEmployerCompletedEventHandler(object sender, LoginEmployerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginEmployerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginEmployerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int EmployerID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool EmployerIDSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool CanLogin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool CanLoginSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginJobSeekerCompletedEventHandler(object sender, LoginJobSeekerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginJobSeekerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginJobSeekerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int JobSeekerID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool JobSeekerIDSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool CanLogin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool CanLoginSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginAdminCompletedEventHandler(object sender, LoginAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int JobSeekerID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool JobSeekerIDSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool CanLogin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool CanLoginSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AllJobseekersCompletedEventHandler(object sender, AllJobseekersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllJobseekersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllJobseekersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobSeeker[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobSeeker[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SingleJobseekerCompletedEventHandler(object sender, SingleJobseekerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SingleJobseekerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SingleJobseekerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobSeeker Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobSeeker)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SingleEmployerCompletedEventHandler(object sender, SingleEmployerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SingleEmployerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SingleEmployerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteEmployerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteJobSeekerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ChangeJobSeekerPasswordCompletedEventHandler(object sender, ChangeJobSeekerPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeJobSeekerPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeJobSeekerPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool success {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool successSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ChangeEmployerPasswordCompletedEventHandler(object sender, ChangeEmployerPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeEmployerPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeEmployerPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool success {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool successSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StoreSkillsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReadSkillsCompletedEventHandler(object sender, ReadSkillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadSkillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadSkillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InformalSkill[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InformalSkill[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PostJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AllJobsCompletedEventHandler(object sender, AllJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Job[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Job[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ApplyForJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getApplicantsCompletedEventHandler(object sender, getApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobSeeker[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobSeeker[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteJobApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddNewToolOrEquipmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RemoveToolOrEquipmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetToolsAndEquipmentsCompletedEventHandler(object sender, GetToolsAndEquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetToolsAndEquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetToolsAndEquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tool_Equipment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tool_Equipment[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591