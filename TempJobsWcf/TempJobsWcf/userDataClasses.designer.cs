#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TempJobsWcf
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class userDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployee_Data(Employee_Data instance);
    partial void UpdateEmployee_Data(Employee_Data instance);
    partial void DeleteEmployee_Data(Employee_Data instance);
    partial void InsertEmployer(Employer instance);
    partial void UpdateEmployer(Employer instance);
    partial void DeleteEmployer(Employer instance);
    partial void InsertInformalSkill(InformalSkill instance);
    partial void UpdateInformalSkill(InformalSkill instance);
    partial void DeleteInformalSkill(InformalSkill instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertUserdata(Userdata instance);
    partial void UpdateUserdata(Userdata instance);
    partial void DeleteUserdata(Userdata instance);
    #endregion
		
		public userDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public userDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public userDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public userDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public userDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Employee_Data> Employee_Datas
		{
			get
			{
				return this.GetTable<Employee_Data>();
			}
		}
		
		public System.Data.Linq.Table<Employer> Employers
		{
			get
			{
				return this.GetTable<Employer>();
			}
		}
		
		public System.Data.Linq.Table<InformalSkill> InformalSkills
		{
			get
			{
				return this.GetTable<InformalSkill>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<Userdata> Userdatas
		{
			get
			{
				return this.GetTable<Userdata>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee_Data")]
	public partial class Employee_Data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Employee_Id;
		
		private string _Employment_status;
		
		private System.Nullable<int> _wage_Min;
		
		private System.Nullable<int> _wage_max;
		
		private string _prefered_hours;
		
		private string _isAvailable;
		
		private System.Nullable<int> _UserData_ID;
		
		private EntitySet<InformalSkill> _InformalSkills;
		
		private EntityRef<Userdata> _Userdata;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployee_IdChanging(int value);
    partial void OnEmployee_IdChanged();
    partial void OnEmployment_statusChanging(string value);
    partial void OnEmployment_statusChanged();
    partial void Onwage_MinChanging(System.Nullable<int> value);
    partial void Onwage_MinChanged();
    partial void Onwage_maxChanging(System.Nullable<int> value);
    partial void Onwage_maxChanged();
    partial void Onprefered_hoursChanging(string value);
    partial void Onprefered_hoursChanged();
    partial void OnisAvailableChanging(string value);
    partial void OnisAvailableChanged();
    partial void OnUserData_IDChanging(System.Nullable<int> value);
    partial void OnUserData_IDChanged();
    #endregion
		
		public Employee_Data()
		{
			this._InformalSkills = new EntitySet<InformalSkill>(new Action<InformalSkill>(this.attach_InformalSkills), new Action<InformalSkill>(this.detach_InformalSkills));
			this._Userdata = default(EntityRef<Userdata>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Employee_Id
		{
			get
			{
				return this._Employee_Id;
			}
			set
			{
				if ((this._Employee_Id != value))
				{
					this.OnEmployee_IdChanging(value);
					this.SendPropertyChanging();
					this._Employee_Id = value;
					this.SendPropertyChanged("Employee_Id");
					this.OnEmployee_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employment_status", DbType="VarChar(20)")]
		public string Employment_status
		{
			get
			{
				return this._Employment_status;
			}
			set
			{
				if ((this._Employment_status != value))
				{
					this.OnEmployment_statusChanging(value);
					this.SendPropertyChanging();
					this._Employment_status = value;
					this.SendPropertyChanged("Employment_status");
					this.OnEmployment_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wage_Min", DbType="Int")]
		public System.Nullable<int> wage_Min
		{
			get
			{
				return this._wage_Min;
			}
			set
			{
				if ((this._wage_Min != value))
				{
					this.Onwage_MinChanging(value);
					this.SendPropertyChanging();
					this._wage_Min = value;
					this.SendPropertyChanged("wage_Min");
					this.Onwage_MinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wage_max", DbType="Int")]
		public System.Nullable<int> wage_max
		{
			get
			{
				return this._wage_max;
			}
			set
			{
				if ((this._wage_max != value))
				{
					this.Onwage_maxChanging(value);
					this.SendPropertyChanging();
					this._wage_max = value;
					this.SendPropertyChanged("wage_max");
					this.Onwage_maxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prefered_hours", DbType="VarChar(15)")]
		public string prefered_hours
		{
			get
			{
				return this._prefered_hours;
			}
			set
			{
				if ((this._prefered_hours != value))
				{
					this.Onprefered_hoursChanging(value);
					this.SendPropertyChanging();
					this._prefered_hours = value;
					this.SendPropertyChanged("prefered_hours");
					this.Onprefered_hoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAvailable", DbType="VarChar(4)")]
		public string isAvailable
		{
			get
			{
				return this._isAvailable;
			}
			set
			{
				if ((this._isAvailable != value))
				{
					this.OnisAvailableChanging(value);
					this.SendPropertyChanging();
					this._isAvailable = value;
					this.SendPropertyChanged("isAvailable");
					this.OnisAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserData_ID", DbType="Int")]
		public System.Nullable<int> UserData_ID
		{
			get
			{
				return this._UserData_ID;
			}
			set
			{
				if ((this._UserData_ID != value))
				{
					if (this._Userdata.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserData_IDChanging(value);
					this.SendPropertyChanging();
					this._UserData_ID = value;
					this.SendPropertyChanged("UserData_ID");
					this.OnUserData_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Data_InformalSkill", Storage="_InformalSkills", ThisKey="Employee_Id", OtherKey="Employee_Id")]
		public EntitySet<InformalSkill> InformalSkills
		{
			get
			{
				return this._InformalSkills;
			}
			set
			{
				this._InformalSkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Userdata_Employee_Data", Storage="_Userdata", ThisKey="UserData_ID", OtherKey="Id", IsForeignKey=true)]
		public Userdata Userdata
		{
			get
			{
				return this._Userdata.Entity;
			}
			set
			{
				Userdata previousValue = this._Userdata.Entity;
				if (((previousValue != value) 
							|| (this._Userdata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Userdata.Entity = null;
						previousValue.Employee_Datas.Remove(this);
					}
					this._Userdata.Entity = value;
					if ((value != null))
					{
						value.Employee_Datas.Add(this);
						this._UserData_ID = value.Id;
					}
					else
					{
						this._UserData_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Userdata");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InformalSkills(InformalSkill entity)
		{
			this.SendPropertyChanging();
			entity.Employee_Data = this;
		}
		
		private void detach_InformalSkills(InformalSkill entity)
		{
			this.SendPropertyChanging();
			entity.Employee_Data = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employer")]
	public partial class Employer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Employer_Id;
		
		private System.Nullable<double> _Rating;
		
		private string _isAvailabe;
		
		private System.Nullable<int> _numberOfJobsOffered;
		
		private string _prefered_hours;
		
		private System.Nullable<int> _UserData_ID;
		
		private EntitySet<Job> _Jobs;
		
		private EntityRef<Userdata> _Userdata;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployer_IdChanging(int value);
    partial void OnEmployer_IdChanged();
    partial void OnRatingChanging(System.Nullable<double> value);
    partial void OnRatingChanged();
    partial void OnisAvailabeChanging(string value);
    partial void OnisAvailabeChanged();
    partial void OnnumberOfJobsOfferedChanging(System.Nullable<int> value);
    partial void OnnumberOfJobsOfferedChanged();
    partial void Onprefered_hoursChanging(string value);
    partial void Onprefered_hoursChanged();
    partial void OnUserData_IDChanging(System.Nullable<int> value);
    partial void OnUserData_IDChanged();
    #endregion
		
		public Employer()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._Userdata = default(EntityRef<Userdata>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employer_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Employer_Id
		{
			get
			{
				return this._Employer_Id;
			}
			set
			{
				if ((this._Employer_Id != value))
				{
					this.OnEmployer_IdChanging(value);
					this.SendPropertyChanging();
					this._Employer_Id = value;
					this.SendPropertyChanged("Employer_Id");
					this.OnEmployer_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float")]
		public System.Nullable<double> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAvailabe", DbType="NVarChar(4)")]
		public string isAvailabe
		{
			get
			{
				return this._isAvailabe;
			}
			set
			{
				if ((this._isAvailabe != value))
				{
					this.OnisAvailabeChanging(value);
					this.SendPropertyChanging();
					this._isAvailabe = value;
					this.SendPropertyChanged("isAvailabe");
					this.OnisAvailabeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberOfJobsOffered", DbType="Int")]
		public System.Nullable<int> numberOfJobsOffered
		{
			get
			{
				return this._numberOfJobsOffered;
			}
			set
			{
				if ((this._numberOfJobsOffered != value))
				{
					this.OnnumberOfJobsOfferedChanging(value);
					this.SendPropertyChanging();
					this._numberOfJobsOffered = value;
					this.SendPropertyChanged("numberOfJobsOffered");
					this.OnnumberOfJobsOfferedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prefered_hours", DbType="VarChar(15)")]
		public string prefered_hours
		{
			get
			{
				return this._prefered_hours;
			}
			set
			{
				if ((this._prefered_hours != value))
				{
					this.Onprefered_hoursChanging(value);
					this.SendPropertyChanging();
					this._prefered_hours = value;
					this.SendPropertyChanged("prefered_hours");
					this.Onprefered_hoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserData_ID", DbType="Int")]
		public System.Nullable<int> UserData_ID
		{
			get
			{
				return this._UserData_ID;
			}
			set
			{
				if ((this._UserData_ID != value))
				{
					if (this._Userdata.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserData_IDChanging(value);
					this.SendPropertyChanging();
					this._UserData_ID = value;
					this.SendPropertyChanged("UserData_ID");
					this.OnUserData_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_Job", Storage="_Jobs", ThisKey="Employer_Id", OtherKey="Employer_ID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Userdata_Employer", Storage="_Userdata", ThisKey="UserData_ID", OtherKey="Id", IsForeignKey=true)]
		public Userdata Userdata
		{
			get
			{
				return this._Userdata.Entity;
			}
			set
			{
				Userdata previousValue = this._Userdata.Entity;
				if (((previousValue != value) 
							|| (this._Userdata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Userdata.Entity = null;
						previousValue.Employers.Remove(this);
					}
					this._Userdata.Entity = value;
					if ((value != null))
					{
						value.Employers.Add(this);
						this._UserData_ID = value.Id;
					}
					else
					{
						this._UserData_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Userdata");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Employer = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Employer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformalSkills")]
	public partial class InformalSkill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Skill_ID;
		
		private string _Name;
		
		private System.Nullable<int> _Employee_Id;
		
		private EntityRef<Employee_Data> _Employee_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkill_IDChanging(int value);
    partial void OnSkill_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmployee_IdChanging(System.Nullable<int> value);
    partial void OnEmployee_IdChanged();
    #endregion
		
		public InformalSkill()
		{
			this._Employee_Data = default(EntityRef<Employee_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Skill_ID
		{
			get
			{
				return this._Skill_ID;
			}
			set
			{
				if ((this._Skill_ID != value))
				{
					this.OnSkill_IDChanging(value);
					this.SendPropertyChanging();
					this._Skill_ID = value;
					this.SendPropertyChanged("Skill_ID");
					this.OnSkill_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_Id", DbType="Int")]
		public System.Nullable<int> Employee_Id
		{
			get
			{
				return this._Employee_Id;
			}
			set
			{
				if ((this._Employee_Id != value))
				{
					if (this._Employee_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployee_IdChanging(value);
					this.SendPropertyChanging();
					this._Employee_Id = value;
					this.SendPropertyChanged("Employee_Id");
					this.OnEmployee_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Data_InformalSkill", Storage="_Employee_Data", ThisKey="Employee_Id", OtherKey="Employee_Id", IsForeignKey=true)]
		public Employee_Data Employee_Data
		{
			get
			{
				return this._Employee_Data.Entity;
			}
			set
			{
				Employee_Data previousValue = this._Employee_Data.Entity;
				if (((previousValue != value) 
							|| (this._Employee_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee_Data.Entity = null;
						previousValue.InformalSkills.Remove(this);
					}
					this._Employee_Data.Entity = value;
					if ((value != null))
					{
						value.InformalSkills.Add(this);
						this._Employee_Id = value.Employee_Id;
					}
					else
					{
						this._Employee_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _Duration_Hours;
		
		private string _Location;
		
		private System.Nullable<double> _Reward;
		
		private string _JobPicture;
		
		private System.Nullable<int> _Employer_ID;
		
		private EntityRef<Employer> _Employer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDuration_HoursChanging(System.Nullable<int> value);
    partial void OnDuration_HoursChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnRewardChanging(System.Nullable<double> value);
    partial void OnRewardChanged();
    partial void OnJobPictureChanging(string value);
    partial void OnJobPictureChanged();
    partial void OnEmployer_IDChanging(System.Nullable<int> value);
    partial void OnEmployer_IDChanged();
    #endregion
		
		public Job()
		{
			this._Employer = default(EntityRef<Employer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration_Hours", DbType="Int")]
		public System.Nullable<int> Duration_Hours
		{
			get
			{
				return this._Duration_Hours;
			}
			set
			{
				if ((this._Duration_Hours != value))
				{
					this.OnDuration_HoursChanging(value);
					this.SendPropertyChanging();
					this._Duration_Hours = value;
					this.SendPropertyChanged("Duration_Hours");
					this.OnDuration_HoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(MAX)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reward", DbType="Float")]
		public System.Nullable<double> Reward
		{
			get
			{
				return this._Reward;
			}
			set
			{
				if ((this._Reward != value))
				{
					this.OnRewardChanging(value);
					this.SendPropertyChanging();
					this._Reward = value;
					this.SendPropertyChanged("Reward");
					this.OnRewardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPicture", DbType="VarChar(MAX)")]
		public string JobPicture
		{
			get
			{
				return this._JobPicture;
			}
			set
			{
				if ((this._JobPicture != value))
				{
					this.OnJobPictureChanging(value);
					this.SendPropertyChanging();
					this._JobPicture = value;
					this.SendPropertyChanged("JobPicture");
					this.OnJobPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employer_ID", DbType="Int")]
		public System.Nullable<int> Employer_ID
		{
			get
			{
				return this._Employer_ID;
			}
			set
			{
				if ((this._Employer_ID != value))
				{
					if (this._Employer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployer_IDChanging(value);
					this.SendPropertyChanging();
					this._Employer_ID = value;
					this.SendPropertyChanged("Employer_ID");
					this.OnEmployer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_Job", Storage="_Employer", ThisKey="Employer_ID", OtherKey="Employer_Id", IsForeignKey=true)]
		public Employer Employer
		{
			get
			{
				return this._Employer.Entity;
			}
			set
			{
				Employer previousValue = this._Employer.Entity;
				if (((previousValue != value) 
							|| (this._Employer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employer.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Employer.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._Employer_ID = value.Employer_Id;
					}
					else
					{
						this._Employer_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Userdata")]
	public partial class Userdata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _password;
		
		private string _Email;
		
		private string _contactNumber;
		
		private string _alternativeNumber;
		
		private string _address;
		
		private System.Nullable<int> _authinticationLevel;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _ProfileImage_String;
		
		private string _Gender;
		
		private System.Nullable<int> _Age;
		
		private EntitySet<Employee_Data> _Employee_Datas;
		
		private EntitySet<Employer> _Employers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OncontactNumberChanging(string value);
    partial void OncontactNumberChanged();
    partial void OnalternativeNumberChanging(string value);
    partial void OnalternativeNumberChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnauthinticationLevelChanging(System.Nullable<int> value);
    partial void OnauthinticationLevelChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnProfileImage_StringChanging(string value);
    partial void OnProfileImage_StringChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    #endregion
		
		public Userdata()
		{
			this._Employee_Datas = new EntitySet<Employee_Data>(new Action<Employee_Data>(this.attach_Employee_Datas), new Action<Employee_Data>(this.detach_Employee_Datas));
			this._Employers = new EntitySet<Employer>(new Action<Employer>(this.attach_Employers), new Action<Employer>(this.detach_Employers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactNumber", DbType="VarChar(50)")]
		public string contactNumber
		{
			get
			{
				return this._contactNumber;
			}
			set
			{
				if ((this._contactNumber != value))
				{
					this.OncontactNumberChanging(value);
					this.SendPropertyChanging();
					this._contactNumber = value;
					this.SendPropertyChanged("contactNumber");
					this.OncontactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alternativeNumber", DbType="VarChar(50)")]
		public string alternativeNumber
		{
			get
			{
				return this._alternativeNumber;
			}
			set
			{
				if ((this._alternativeNumber != value))
				{
					this.OnalternativeNumberChanging(value);
					this.SendPropertyChanging();
					this._alternativeNumber = value;
					this.SendPropertyChanged("alternativeNumber");
					this.OnalternativeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authinticationLevel", DbType="Int")]
		public System.Nullable<int> authinticationLevel
		{
			get
			{
				return this._authinticationLevel;
			}
			set
			{
				if ((this._authinticationLevel != value))
				{
					this.OnauthinticationLevelChanging(value);
					this.SendPropertyChanging();
					this._authinticationLevel = value;
					this.SendPropertyChanged("authinticationLevel");
					this.OnauthinticationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(50)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(50)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileImage_String", DbType="VarChar(MAX)")]
		public string ProfileImage_String
		{
			get
			{
				return this._ProfileImage_String;
			}
			set
			{
				if ((this._ProfileImage_String != value))
				{
					this.OnProfileImage_StringChanging(value);
					this.SendPropertyChanging();
					this._ProfileImage_String = value;
					this.SendPropertyChanged("ProfileImage_String");
					this.OnProfileImage_StringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(1)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Userdata_Employee_Data", Storage="_Employee_Datas", ThisKey="Id", OtherKey="UserData_ID")]
		public EntitySet<Employee_Data> Employee_Datas
		{
			get
			{
				return this._Employee_Datas;
			}
			set
			{
				this._Employee_Datas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Userdata_Employer", Storage="_Employers", ThisKey="Id", OtherKey="UserData_ID")]
		public EntitySet<Employer> Employers
		{
			get
			{
				return this._Employers;
			}
			set
			{
				this._Employers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee_Datas(Employee_Data entity)
		{
			this.SendPropertyChanging();
			entity.Userdata = this;
		}
		
		private void detach_Employee_Datas(Employee_Data entity)
		{
			this.SendPropertyChanging();
			entity.Userdata = null;
		}
		
		private void attach_Employers(Employer entity)
		{
			this.SendPropertyChanging();
			entity.Userdata = this;
		}
		
		private void detach_Employers(Employer entity)
		{
			this.SendPropertyChanging();
			entity.Userdata = null;
		}
	}
}
#pragma warning restore 1591
