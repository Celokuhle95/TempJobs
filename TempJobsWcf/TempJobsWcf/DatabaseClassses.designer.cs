#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TempJobsWcf
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DatabaseClasssesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployer(Employer instance);
    partial void UpdateEmployer(Employer instance);
    partial void DeleteEmployer(Employer instance);
    partial void InsertJobSeeker(JobSeeker instance);
    partial void UpdateJobSeeker(JobSeeker instance);
    partial void DeleteJobSeeker(JobSeeker instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertInformalSkill(InformalSkill instance);
    partial void UpdateInformalSkill(InformalSkill instance);
    partial void DeleteInformalSkill(InformalSkill instance);
    partial void InsertJobApplication(JobApplication instance);
    partial void UpdateJobApplication(JobApplication instance);
    partial void DeleteJobApplication(JobApplication instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    #endregion
		
		public DatabaseClasssesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseClasssesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseClasssesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseClasssesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseClasssesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Employer> Employers
		{
			get
			{
				return this.GetTable<Employer>();
			}
		}
		
		public System.Data.Linq.Table<JobSeeker> JobSeekers
		{
			get
			{
				return this.GetTable<JobSeeker>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<InformalSkill> InformalSkills
		{
			get
			{
				return this.GetTable<InformalSkill>();
			}
		}
		
		public System.Data.Linq.Table<JobApplication> JobApplications
		{
			get
			{
				return this.GetTable<JobApplication>();
			}
		}
		
		public System.Data.Linq.Table<Tool_Equipment> Tool_Equipments
		{
			get
			{
				return this.GetTable<Tool_Equipment>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employer")]
	public partial class Employer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployerID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailAddress;
		
		private string _Password;
		
		private string _ContactNumber;
		
		private string _AlternativeContactNumber;
		
		private string _ResidentialAddress;
		
		private string _ProfileImage_String;
		
		private EntitySet<Job> _Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployerIDChanging(int value);
    partial void OnEmployerIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnAlternativeContactNumberChanging(string value);
    partial void OnAlternativeContactNumberChanged();
    partial void OnResidentialAddressChanging(string value);
    partial void OnResidentialAddressChanged();
    partial void OnProfileImage_StringChanging(string value);
    partial void OnProfileImage_StringChanged();
    #endregion
		
		public Employer()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployerID
		{
			get
			{
				return this._EmployerID;
			}
			set
			{
				if ((this._EmployerID != value))
				{
					this.OnEmployerIDChanging(value);
					this.SendPropertyChanging();
					this._EmployerID = value;
					this.SendPropertyChanged("EmployerID");
					this.OnEmployerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(MAX)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="VarChar(50)")]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeContactNumber", DbType="VarChar(50)")]
		public string AlternativeContactNumber
		{
			get
			{
				return this._AlternativeContactNumber;
			}
			set
			{
				if ((this._AlternativeContactNumber != value))
				{
					this.OnAlternativeContactNumberChanging(value);
					this.SendPropertyChanging();
					this._AlternativeContactNumber = value;
					this.SendPropertyChanged("AlternativeContactNumber");
					this.OnAlternativeContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentialAddress", DbType="VarChar(50)")]
		public string ResidentialAddress
		{
			get
			{
				return this._ResidentialAddress;
			}
			set
			{
				if ((this._ResidentialAddress != value))
				{
					this.OnResidentialAddressChanging(value);
					this.SendPropertyChanging();
					this._ResidentialAddress = value;
					this.SendPropertyChanged("ResidentialAddress");
					this.OnResidentialAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileImage_String", DbType="VarChar(MAX)")]
		public string ProfileImage_String
		{
			get
			{
				return this._ProfileImage_String;
			}
			set
			{
				if ((this._ProfileImage_String != value))
				{
					this.OnProfileImage_StringChanging(value);
					this.SendPropertyChanging();
					this._ProfileImage_String = value;
					this.SendPropertyChanged("ProfileImage_String");
					this.OnProfileImage_StringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_Job", Storage="_Jobs", ThisKey="EmployerID", OtherKey="EmployerID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Employer = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Employer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobSeeker")]
	public partial class JobSeeker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobSeekerID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailAddress;
		
		private string _Password;
		
		private string _ContactNumber;
		
		private string _AlternativeContactNumber;
		
		private string _ResidentialAddress;
		
		private string _ProfileImage_String;
		
		private System.Nullable<int> _IsAvailable;
		
		private EntitySet<InformalSkill> _InformalSkills;
		
		private EntitySet<JobApplication> _JobApplications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobSeekerIDChanging(int value);
    partial void OnJobSeekerIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnAlternativeContactNumberChanging(string value);
    partial void OnAlternativeContactNumberChanged();
    partial void OnResidentialAddressChanging(string value);
    partial void OnResidentialAddressChanged();
    partial void OnProfileImage_StringChanging(string value);
    partial void OnProfileImage_StringChanged();
    partial void OnIsAvailableChanging(System.Nullable<int> value);
    partial void OnIsAvailableChanged();
    #endregion
		
		public JobSeeker()
		{
			this._InformalSkills = new EntitySet<InformalSkill>(new Action<InformalSkill>(this.attach_InformalSkills), new Action<InformalSkill>(this.detach_InformalSkills));
			this._JobApplications = new EntitySet<JobApplication>(new Action<JobApplication>(this.attach_JobApplications), new Action<JobApplication>(this.detach_JobApplications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobSeekerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobSeekerID
		{
			get
			{
				return this._JobSeekerID;
			}
			set
			{
				if ((this._JobSeekerID != value))
				{
					this.OnJobSeekerIDChanging(value);
					this.SendPropertyChanging();
					this._JobSeekerID = value;
					this.SendPropertyChanged("JobSeekerID");
					this.OnJobSeekerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(MAX)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="VarChar(50)")]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeContactNumber", DbType="VarChar(50)")]
		public string AlternativeContactNumber
		{
			get
			{
				return this._AlternativeContactNumber;
			}
			set
			{
				if ((this._AlternativeContactNumber != value))
				{
					this.OnAlternativeContactNumberChanging(value);
					this.SendPropertyChanging();
					this._AlternativeContactNumber = value;
					this.SendPropertyChanged("AlternativeContactNumber");
					this.OnAlternativeContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentialAddress", DbType="VarChar(50)")]
		public string ResidentialAddress
		{
			get
			{
				return this._ResidentialAddress;
			}
			set
			{
				if ((this._ResidentialAddress != value))
				{
					this.OnResidentialAddressChanging(value);
					this.SendPropertyChanging();
					this._ResidentialAddress = value;
					this.SendPropertyChanged("ResidentialAddress");
					this.OnResidentialAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileImage_String", DbType="VarChar(MAX)")]
		public string ProfileImage_String
		{
			get
			{
				return this._ProfileImage_String;
			}
			set
			{
				if ((this._ProfileImage_String != value))
				{
					this.OnProfileImage_StringChanging(value);
					this.SendPropertyChanging();
					this._ProfileImage_String = value;
					this.SendPropertyChanged("ProfileImage_String");
					this.OnProfileImage_StringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable", DbType="Int")]
		public System.Nullable<int> IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this.OnIsAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsAvailable = value;
					this.SendPropertyChanged("IsAvailable");
					this.OnIsAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobSeeker_InformalSkill", Storage="_InformalSkills", ThisKey="JobSeekerID", OtherKey="JobSeekerID")]
		public EntitySet<InformalSkill> InformalSkills
		{
			get
			{
				return this._InformalSkills;
			}
			set
			{
				this._InformalSkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobSeeker_JobApplication", Storage="_JobApplications", ThisKey="JobSeekerID", OtherKey="JobSeekerID")]
		public EntitySet<JobApplication> JobApplications
		{
			get
			{
				return this._JobApplications;
			}
			set
			{
				this._JobApplications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InformalSkills(InformalSkill entity)
		{
			this.SendPropertyChanging();
			entity.JobSeeker = this;
		}
		
		private void detach_InformalSkills(InformalSkill entity)
		{
			this.SendPropertyChanging();
			entity.JobSeeker = null;
		}
		
		private void attach_JobApplications(JobApplication entity)
		{
			this.SendPropertyChanging();
			entity.JobSeeker = this;
		}
		
		private void detach_JobApplications(JobApplication entity)
		{
			this.SendPropertyChanging();
			entity.JobSeeker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailAddress;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(MAX)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformalSkill")]
	public partial class InformalSkill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Skill_ID;
		
		private string _Name;
		
		private System.Nullable<int> _SkillLevel;
		
		private System.Nullable<int> _JobSeekerID;
		
		private EntityRef<JobSeeker> _JobSeeker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkill_IDChanging(int value);
    partial void OnSkill_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSkillLevelChanging(System.Nullable<int> value);
    partial void OnSkillLevelChanged();
    partial void OnJobSeekerIDChanging(System.Nullable<int> value);
    partial void OnJobSeekerIDChanged();
    #endregion
		
		public InformalSkill()
		{
			this._JobSeeker = default(EntityRef<JobSeeker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Skill_ID
		{
			get
			{
				return this._Skill_ID;
			}
			set
			{
				if ((this._Skill_ID != value))
				{
					this.OnSkill_IDChanging(value);
					this.SendPropertyChanging();
					this._Skill_ID = value;
					this.SendPropertyChanged("Skill_ID");
					this.OnSkill_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillLevel", DbType="Int")]
		public System.Nullable<int> SkillLevel
		{
			get
			{
				return this._SkillLevel;
			}
			set
			{
				if ((this._SkillLevel != value))
				{
					this.OnSkillLevelChanging(value);
					this.SendPropertyChanging();
					this._SkillLevel = value;
					this.SendPropertyChanged("SkillLevel");
					this.OnSkillLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobSeekerID", DbType="Int")]
		public System.Nullable<int> JobSeekerID
		{
			get
			{
				return this._JobSeekerID;
			}
			set
			{
				if ((this._JobSeekerID != value))
				{
					if (this._JobSeeker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobSeekerIDChanging(value);
					this.SendPropertyChanging();
					this._JobSeekerID = value;
					this.SendPropertyChanged("JobSeekerID");
					this.OnJobSeekerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobSeeker_InformalSkill", Storage="_JobSeeker", ThisKey="JobSeekerID", OtherKey="JobSeekerID", IsForeignKey=true)]
		public JobSeeker JobSeeker
		{
			get
			{
				return this._JobSeeker.Entity;
			}
			set
			{
				JobSeeker previousValue = this._JobSeeker.Entity;
				if (((previousValue != value) 
							|| (this._JobSeeker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobSeeker.Entity = null;
						previousValue.InformalSkills.Remove(this);
					}
					this._JobSeeker.Entity = value;
					if ((value != null))
					{
						value.InformalSkills.Add(this);
						this._JobSeekerID = value.JobSeekerID;
					}
					else
					{
						this._JobSeekerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("JobSeeker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobApplication")]
	public partial class JobApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationID;
		
		private System.Nullable<int> _JobID;
		
		private System.Nullable<int> _JobSeekerID;
		
		private EntityRef<JobSeeker> _JobSeeker;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnJobIDChanging(System.Nullable<int> value);
    partial void OnJobIDChanged();
    partial void OnJobSeekerIDChanging(System.Nullable<int> value);
    partial void OnJobSeekerIDChanged();
    #endregion
		
		public JobApplication()
		{
			this._JobSeeker = default(EntityRef<JobSeeker>);
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int")]
		public System.Nullable<int> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobSeekerID", DbType="Int")]
		public System.Nullable<int> JobSeekerID
		{
			get
			{
				return this._JobSeekerID;
			}
			set
			{
				if ((this._JobSeekerID != value))
				{
					if (this._JobSeeker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobSeekerIDChanging(value);
					this.SendPropertyChanging();
					this._JobSeekerID = value;
					this.SendPropertyChanged("JobSeekerID");
					this.OnJobSeekerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobSeeker_JobApplication", Storage="_JobSeeker", ThisKey="JobSeekerID", OtherKey="JobSeekerID", IsForeignKey=true)]
		public JobSeeker JobSeeker
		{
			get
			{
				return this._JobSeeker.Entity;
			}
			set
			{
				JobSeeker previousValue = this._JobSeeker.Entity;
				if (((previousValue != value) 
							|| (this._JobSeeker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobSeeker.Entity = null;
						previousValue.JobApplications.Remove(this);
					}
					this._JobSeeker.Entity = value;
					if ((value != null))
					{
						value.JobApplications.Add(this);
						this._JobSeekerID = value.JobSeekerID;
					}
					else
					{
						this._JobSeekerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("JobSeeker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobApplication", Storage="_Job", ThisKey="JobID", OtherKey="JobID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.JobApplications.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.JobApplications.Add(this);
						this._JobID = value.JobID;
					}
					else
					{
						this._JobID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tool_Equipment")]
	public partial class Tool_Equipment
	{
		
		private int _Tool_EquipmentID;
		
		private string _Name;
		
		private string _Image;
		
		private System.Nullable<int> _JobSeekerID;
		
		public Tool_Equipment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tool_EquipmentID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Tool_EquipmentID
		{
			get
			{
				return this._Tool_EquipmentID;
			}
			set
			{
				if ((this._Tool_EquipmentID != value))
				{
					this._Tool_EquipmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobSeekerID", DbType="Int")]
		public System.Nullable<int> JobSeekerID
		{
			get
			{
				return this._JobSeekerID;
			}
			set
			{
				if ((this._JobSeekerID != value))
				{
					this._JobSeekerID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _NumberOfDays;
		
		private string _DueDate;
		
		private string _StartDate;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private string _Location;
		
		private System.Nullable<double> _ToBePaid;
		
		private System.Nullable<int> _EmployerID;
		
		private EntitySet<JobApplication> _JobApplications;
		
		private EntityRef<Employer> _Employer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNumberOfDaysChanging(System.Nullable<int> value);
    partial void OnNumberOfDaysChanged();
    partial void OnDueDateChanging(string value);
    partial void OnDueDateChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnToBePaidChanging(System.Nullable<double> value);
    partial void OnToBePaidChanged();
    partial void OnEmployerIDChanging(System.Nullable<int> value);
    partial void OnEmployerIDChanged();
    #endregion
		
		public Job()
		{
			this._JobApplications = new EntitySet<JobApplication>(new Action<JobApplication>(this.attach_JobApplications), new Action<JobApplication>(this.detach_JobApplications));
			this._Employer = default(EntityRef<Employer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Int")]
		public System.Nullable<int> NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="VarChar(50)")]
		public string DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="VarChar(50)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50)")]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="VarChar(50)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(MAX)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToBePaid", DbType="Float")]
		public System.Nullable<double> ToBePaid
		{
			get
			{
				return this._ToBePaid;
			}
			set
			{
				if ((this._ToBePaid != value))
				{
					this.OnToBePaidChanging(value);
					this.SendPropertyChanging();
					this._ToBePaid = value;
					this.SendPropertyChanged("ToBePaid");
					this.OnToBePaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerID", DbType="Int")]
		public System.Nullable<int> EmployerID
		{
			get
			{
				return this._EmployerID;
			}
			set
			{
				if ((this._EmployerID != value))
				{
					if (this._Employer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployerIDChanging(value);
					this.SendPropertyChanging();
					this._EmployerID = value;
					this.SendPropertyChanged("EmployerID");
					this.OnEmployerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobApplication", Storage="_JobApplications", ThisKey="JobID", OtherKey="JobID")]
		public EntitySet<JobApplication> JobApplications
		{
			get
			{
				return this._JobApplications;
			}
			set
			{
				this._JobApplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_Job", Storage="_Employer", ThisKey="EmployerID", OtherKey="EmployerID", IsForeignKey=true)]
		public Employer Employer
		{
			get
			{
				return this._Employer.Entity;
			}
			set
			{
				Employer previousValue = this._Employer.Entity;
				if (((previousValue != value) 
							|| (this._Employer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employer.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Employer.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._EmployerID = value.EmployerID;
					}
					else
					{
						this._EmployerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobApplications(JobApplication entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_JobApplications(JobApplication entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
	}
}
#pragma warning restore 1591
